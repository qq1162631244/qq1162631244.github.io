<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo搭建个人博客</title>
      <link href="/2020/03/13/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/03/13/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo搭建个人博客"><a href="#hexo搭建个人博客" class="headerlink" title="hexo搭建个人博客"></a>hexo搭建个人博客</h1><h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><p><strong>1.Node.js    2.git    3.Vs Code    4.Typora</strong></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><pre><code>npm config set registry https://registry.npm.taobao.org    #配置国内的镜像源npm install -g hexo                                        #通过npm安装hexohexo init                                                  #初始化hexo文件npm install hexo-deployer-git --save                       #安装git插件npm install hexo-asset-image --save                        #安装hexo图片上传插件hexo c                                                     #清除所有记录hexo g                                                     #生成静态网页hexo s                                                     #启动服务hexo d                                                     #将静态网页上传到仓库</code></pre><h2 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h2><p><a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener"><strong>hexo-theme-matery</strong></a></p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能。</li></ul><h2 id="实用小设置"><a href="#实用小设置" class="headerlink" title="实用小设置"></a>实用小设置</h2><p><strong>所有网页在新标签页打开：在网页公共头部head部分写入<base target="_blank"/></strong></p><p><strong>外部文件储存：[leancloud</strong>](<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">https://www.leancloud.cn/</a>)</p><p><strong>添加鼠标点击烟花爆炸效果</strong><br>在 \themes\material-x\source\js 目录下新建一个 fireworks.js 的文件，里面写入以下代码：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">updateCoords</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>    pointerX<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token operator">||</span>e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">)</span>    <span class="token operator">-</span>canvasEl<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span>    pointerY<span class="token operator">=</span>e<span class="token punctuation">.</span>clientY<span class="token operator">||</span>e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>canvasEl<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top    <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">setParticuleDirection</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> t<span class="token operator">=</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">,</span>        a<span class="token operator">=</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span>e<span class="token punctuation">.</span>x<span class="token operator">+</span>n<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>y<span class="token punctuation">:</span>e<span class="token punctuation">.</span>y<span class="token operator">+</span>n<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createParticule</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">return</span> a<span class="token punctuation">.</span>x<span class="token operator">=</span>e<span class="token punctuation">,</span>            a<span class="token punctuation">.</span>y<span class="token operator">=</span>t<span class="token punctuation">,</span>            a<span class="token punctuation">.</span>color<span class="token operator">=</span>colors<span class="token punctuation">[</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>colors<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span>radius<span class="token operator">=</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span>endPos<span class="token operator">=</span><span class="token function">setParticuleDirection</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span>draw<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">,</span>a<span class="token punctuation">.</span>y<span class="token punctuation">,</span>a<span class="token punctuation">.</span>radius<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span>a<span class="token punctuation">.</span>color<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>a        <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createCircle</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> a<span class="token punctuation">.</span>x<span class="token operator">=</span>e<span class="token punctuation">,</span>            a<span class="token punctuation">.</span>y<span class="token operator">=</span>t<span class="token punctuation">,</span>            a<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"#F00"</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>radius<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span>alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span>draw<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                ctx<span class="token punctuation">.</span>globalAlpha<span class="token operator">=</span>a<span class="token punctuation">.</span>alpha<span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">,</span>a<span class="token punctuation">.</span>y<span class="token punctuation">,</span>a<span class="token punctuation">.</span>radius<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span>a<span class="token punctuation">.</span>lineWidth<span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span>strokeStyle<span class="token operator">=</span>a<span class="token punctuation">.</span>color<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                ctx<span class="token punctuation">.</span>globalAlpha<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>a                <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">renderParticule</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>t<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>animatables<span class="token punctuation">.</span>length<span class="token punctuation">;</span>t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        e<span class="token punctuation">.</span>animatables<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">animateParticules</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">createCircle</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>numberOfParticules<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        n<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">createParticule</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span>anime<span class="token punctuation">.</span><span class="token function">timeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                        targets<span class="token punctuation">:</span>n<span class="token punctuation">,</span>                        x<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token keyword">return</span> e<span class="token punctuation">.</span>endPos<span class="token punctuation">.</span>x                        <span class="token punctuation">}</span><span class="token punctuation">,</span>y<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token keyword">return</span> e<span class="token punctuation">.</span>endPos<span class="token punctuation">.</span>y                        <span class="token punctuation">}</span><span class="token punctuation">,</span>radius<span class="token punctuation">:</span><span class="token number">0.1</span><span class="token punctuation">,</span>                        duration<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">,</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        easing<span class="token punctuation">:</span><span class="token string">"easeOutExpo"</span><span class="token punctuation">,</span>                        update<span class="token punctuation">:</span>renderParticule<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>targets<span class="token punctuation">:</span>a<span class="token punctuation">,</span>                        radius<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        lineWidth<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>                        alpha<span class="token punctuation">:</span><span class="token punctuation">{</span>value<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>easing<span class="token punctuation">:</span><span class="token string">"linear"</span><span class="token punctuation">,</span>duration<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                        duration<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">,</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        easing<span class="token punctuation">:</span><span class="token string">"easeOutExpo"</span><span class="token punctuation">,</span>                        update<span class="token punctuation">:</span>renderParticule<span class="token punctuation">,</span>offset<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">var</span> a<span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">var</span> n<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">,</span>                        i<span class="token operator">=</span>arguments<span class="token punctuation">;</span>                        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                        a<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token keyword">var</span> canvasEl<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".fireworks"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>canvasEl<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> ctx<span class="token operator">=</span>canvasEl<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                numberOfParticules<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>                pointerX<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>pointerY<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>                tap<span class="token operator">=</span><span class="token string">"mousedown"</span><span class="token punctuation">,</span>                colors<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"#FF1461"</span><span class="token punctuation">,</span><span class="token string">"#18FF92"</span><span class="token punctuation">,</span><span class="token string">"#5A87FF"</span><span class="token punctuation">,</span><span class="token string">"#FBF38C"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                setCanvasSize<span class="token operator">=</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    canvasEl<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>                    canvasEl<span class="token punctuation">.</span>height<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>                    canvasEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token operator">=</span>window<span class="token punctuation">.</span>innerWidth<span class="token operator">+</span><span class="token string">"px"</span><span class="token punctuation">,</span>                    canvasEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height<span class="token operator">=</span>window<span class="token punctuation">.</span>innerHeight<span class="token operator">+</span><span class="token string">"px"</span><span class="token punctuation">,</span>                    canvasEl<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    render<span class="token operator">=</span><span class="token function">anime</span><span class="token punctuation">(</span><span class="token punctuation">{</span>duration<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">,</span>update<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>canvasEl<span class="token punctuation">.</span>width<span class="token punctuation">,</span>canvasEl<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>tap<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token string">"sidebar"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token operator">&amp;&amp;</span><span class="token string">"toggle-sidebar"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token operator">&amp;&amp;</span><span class="token string">"A"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName<span class="token operator">&amp;&amp;</span><span class="token string">"IMG"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>render<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token function">updateCoords</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">animateParticules</span><span class="token punctuation">(</span>pointerX<span class="token punctuation">,</span>pointerY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token function">setCanvasSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span>setCanvasSize<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token string">"use strict"</span><span class="token punctuation">;</span>                    <span class="token keyword">function</span> <span class="token function">updateCoords</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                        pointerX<span class="token operator">=</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token operator">||</span>e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">)</span><span class="token operator">-</span>canvasEl<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span>                        pointerY<span class="token operator">=</span>e<span class="token punctuation">.</span>clientY<span class="token operator">||</span>e<span class="token punctuation">.</span>touches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token operator">-</span>canvasEl<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">setParticuleDirection</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">var</span> t<span class="token operator">=</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">,</span>a<span class="token operator">=</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">;</span>                        <span class="token keyword">return</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span>e<span class="token punctuation">.</span>x<span class="token operator">+</span>n<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>y<span class="token punctuation">:</span>e<span class="token punctuation">.</span>y<span class="token operator">+</span>n<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createParticule</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> a<span class="token punctuation">.</span>x<span class="token operator">=</span>e<span class="token punctuation">,</span>a<span class="token punctuation">.</span>y<span class="token operator">=</span>t<span class="token punctuation">,</span>a<span class="token punctuation">.</span>color<span class="token operator">=</span>colors<span class="token punctuation">[</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>colors<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        a<span class="token punctuation">.</span>radius<span class="token operator">=</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>endPos<span class="token operator">=</span><span class="token function">setParticuleDirection</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                        a<span class="token punctuation">.</span>draw<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">,</span>a<span class="token punctuation">.</span>y<span class="token punctuation">,</span>a<span class="token punctuation">.</span>radius<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        ctx<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span>a<span class="token punctuation">.</span>color<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>a<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createCircle</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">return</span> a<span class="token punctuation">.</span>x<span class="token operator">=</span>e<span class="token punctuation">,</span>a<span class="token punctuation">.</span>y<span class="token operator">=</span>t<span class="token punctuation">,</span>a<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"#F00"</span><span class="token punctuation">,</span>                            a<span class="token punctuation">.</span>radius<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>draw<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                ctx<span class="token punctuation">.</span>globalAlpha<span class="token operator">=</span>a<span class="token punctuation">.</span>alpha<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">,</span>a<span class="token punctuation">.</span>y<span class="token punctuation">,</span>a<span class="token punctuation">.</span>radius<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                ctx<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span>a<span class="token punctuation">.</span>lineWidth<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span>strokeStyle<span class="token operator">=</span>a<span class="token punctuation">.</span>color<span class="token punctuation">,</span>                                ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ctx<span class="token punctuation">.</span>globalAlpha<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>a<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">renderParticule</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>                                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>t<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>animatables<span class="token punctuation">.</span>length<span class="token punctuation">;</span>t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span>animatables<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">animateParticules</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>                                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">createCircle</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                                    i<span class="token operator">&lt;</span>numberOfParticules<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>n<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">createParticule</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>anime<span class="token punctuation">.</span><span class="token function">timeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>targets<span class="token punctuation">:</span>n<span class="token punctuation">,</span>x<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">.</span>endPos<span class="token punctuation">.</span>x<span class="token punctuation">}</span><span class="token punctuation">,</span>                                    y<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">.</span>endPos<span class="token punctuation">.</span>y<span class="token punctuation">}</span><span class="token punctuation">,</span>                                    radius<span class="token punctuation">:</span><span class="token number">0.1</span><span class="token punctuation">,</span>                                    duration<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">,</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    easing<span class="token punctuation">:</span><span class="token string">"easeOutExpo"</span><span class="token punctuation">,</span>                                    update<span class="token punctuation">:</span>renderParticule<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span>targets<span class="token punctuation">:</span>a<span class="token punctuation">,</span>radius<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    lineWidth<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>alpha<span class="token punctuation">:</span><span class="token punctuation">{</span>value<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>easing<span class="token punctuation">:</span><span class="token string">"linear"</span><span class="token punctuation">,</span>duration<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                    duration<span class="token punctuation">:</span>anime<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">,</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    easing<span class="token punctuation">:</span><span class="token string">"easeOutExpo"</span><span class="token punctuation">,</span>                                    update<span class="token punctuation">:</span>renderParticule<span class="token punctuation">,</span>                                    offset<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>                                        <span class="token keyword">var</span> a<span class="token punctuation">;</span>                                        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                            <span class="token keyword">var</span> n<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">,</span>                                            i<span class="token operator">=</span>arguments<span class="token punctuation">;</span>                                            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                                            a<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                                e<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span>                                            <span class="token punctuation">}</span><span class="token keyword">var</span> canvasEl<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".fireworks"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                            <span class="token keyword">if</span><span class="token punctuation">(</span>canvasEl<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> ctx<span class="token operator">=</span>canvasEl<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            numberOfParticules<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>                                            pointerX<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>                                            pointerY<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>                                            tap<span class="token operator">=</span><span class="token string">"mousedown"</span><span class="token punctuation">,</span>                                            colors<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"#FF1461"</span><span class="token punctuation">,</span><span class="token string">"#18FF92"</span><span class="token punctuation">,</span><span class="token string">"#5A87FF"</span><span class="token punctuation">,</span><span class="token string">"#FBF38C"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                            setCanvasSize<span class="token operator">=</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                                canvasEl<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>                                                canvasEl<span class="token punctuation">.</span>height<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>                                                canvasEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token operator">=</span>window<span class="token punctuation">.</span>innerWidth<span class="token operator">+</span><span class="token string">"px"</span><span class="token punctuation">,</span>                                                canvasEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height<span class="token operator">=</span>window<span class="token punctuation">.</span>innerHeight<span class="token operator">+</span><span class="token string">"px"</span><span class="token punctuation">,</span>                                                canvasEl<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                render<span class="token operator">=</span><span class="token function">anime</span><span class="token punctuation">(</span><span class="token punctuation">{</span>duration<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">,</span>                                                update<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                                    ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>canvasEl<span class="token punctuation">.</span>width<span class="token punctuation">,</span>canvasEl<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>tap<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">"sidebar"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token operator">&amp;&amp;</span><span class="token string">"toggle-sidebar"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token operator">&amp;&amp;</span><span class="token string">"A"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName<span class="token operator">&amp;&amp;</span><span class="token string">"IMG"</span><span class="token operator">!==</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>render<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                    <span class="token function">updateCoords</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>                                                    <span class="token function">animateParticules</span><span class="token punctuation">(</span>pointerX<span class="token punctuation">,</span>pointerY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                    <span class="token function">setCanvasSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span>setCanvasSize<span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在 \themes\material-x\layout\layout.ejs 文件中写入以下代码：</p><pre class="line-numbers language-js"><code class="language-js">    <span class="token operator">&lt;</span>canvas <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fireworks"</span> style<span class="token operator">=</span><span class="token string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span>     <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>     <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/fireworks.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/jpg/1%20(2)-1584122984188.png" alt=""></p><h2 id="参考学习"><a href="#参考学习" class="headerlink" title="参考学习"></a>参考学习</h2><p><a href="https://blog.csdn.net/qq_36759224/article/details/85420403" target="_blank" rel="noopener">Hexo 博客优化之博客美化系列</a></p>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 搭建博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
